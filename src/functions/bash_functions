## Funzioni utili

function unalias_all() {
   unalias grep &> /dev/null
   unalias sed &> /dev/null
   unalias command &> /dev/null
   unalias apt-get &> /dev/null
   unalias apt-rdepends &> /dev/null
}

## Variabili
name=(giovanni francesco lucia aurora alberto vincenzo peppe giuseppe \
      maria mariateresa anna gianluca silvestro paolo simona antonio raffaele \
      luigi sebastiano gianni mariapia ernesto paolo)
      
length_salt_element=${#name[@]}
length_pass=0
length_salt=0
count=0

function mixer_name() { # Passing argument $password_gen

unalias_all

salt=""
password_gen="$1"
key_casual=""
translate=""
seed=0

      salt=`echo ${name[$(($RANDOM%$length_salt_element))]}`
      length_salt=${#salt}
      seed=$(($(($RANDOM%$length_pass))+1)) ### Numero casuale preso dalla lunghezza dalla password generata
      
      for a in `seq 1 $length_salt`
      do
 
         bit_upper_or_lower=`</dev/urandom tr -cd 0-1 | head -c 1` ### Singolo carattere se maiuscolo o minuscolo
            
         if [ $bit_upper_or_lower = 1 ]; then

            translate=$translate`echo $salt | cut -c $a | tr [a-z] [A-Z]`
         else

            translate=$translate`echo $salt | cut -c $a`
         fi

      done

      salt=$translate
            
      for a in `seq $seed $(($seed+$length_salt-1))`
      do
          key_casual=$key_casual`echo $password_gen | cut -c $a`
      done
 
      translate=""
      translate=`echo $password_gen | sed -s s/$key_casual/$salt/`
      password_gen=""
      password_gen=$translate
      translate=""
       
      length_pass=${#password_gen}   ### Ricalcolo della sua lunghezza

      if [ $length_pass -gt $count ]; then

         tmp=$(($length_pass-$count))
         tmp=$(($length_pass-$tmp))

         for a in `seq 1 $tmp`
         do
            translate=$translate`echo $password_gen | cut -c $a`

         done
         
         password_gen=$translate
         
      fi
      
      export password_gen
}

function genumber() {

   if [ "$#" -ne 1 ]; then
      count=15
   else
      count=$1
   fi

   password_gen=`</dev/urandom tr -cd 0-9 | head -c $count`

   echo $password_gen
   unset $password_gen
}

function genpass_alnum() {

   if [ "$#" -ne 1 ]; then
      count=15
   else
      count=$1
   fi

   password_gen="`</dev/urandom tr -cd a-zA-Z0-9_:- | head -c $count`"

   bit_primary=`</dev/urandom tr -cd 0-1 | head -c 1`  ### Decide se le lettere dovranno essere maiuscole o minuscole

   if [ $bit_primary = 1 ]; then
   
      length_pass=${#password_gen}
      mixer_name $password_gen

   fi
      
   echo $password_gen
   unset $password_gen
}

function genpass() {

   if [ "$#" -ne 1 ]; then
      count=15
   else
      count=$1
   fi

   password_gen=`</dev/urandom tr -cd [[:graph:]] | head -c $count`

   bit_primary=`</dev/urandom tr -cd 0-1 | head -c 1`  ### Decide se le lettere dovranno essere maiuscole o minuscole

   if [ $bit_primary = 1 ]; then
   
      length_pass=${#password_gen}
      mixer_name $password_gen

   fi

   echo $password_gen
   unset $password_gen
}

function batt() {

   if [ -f /sys/class/power_supply/BAT1/capacity ]; then

      BATT=`cat /sys/class/power_supply/BAT1/capacity`

         if [[ $BATT -ge 15 ]]; then
            echo -e "(`cat /sys/class/power_supply/BAT1/capacity`%)"        
         else
            echo -e "(`cat /sys/class/power_supply/BAT1/capacity`%)"
         fi   
    fi
}

function dpack() { 

   unalias_all

   if [ $# -ne 1 ]; then

      return 1
   fi

   command -v pdep &> /dev/null

   if [ "$?" != "0" ]; then
      echo "La funzione 'dpack' dipende da 'pdep'"
      return 1
   fi

   apt-get download `pdep $1` 2> /dev/null

   if [ "$?" != "0" ]; then
      package_remove="`apt-get download $(pdep $1) 2>&1 | cut -d" " -f9 | paste -s | sed -s 's/[[:space:]]/|/'`"
      apt-get download `pdep $1 | grep -vE "$package_remove"`
   fi

   unset package_remove
}

function pdep() {

   unalias_all

   command -v apt-rdepends &> /dev/null

   if [ "$?" != "0" ]; then

      echo "Il pacchetto 'apt-rdepends' non Ã¨ installato. Installalo prima."
      return 0
   fi

   if [ $# -ne 1 ]; then
       return 1
   fi

   apt-rdepends $1 2> /dev/null | grep -Ev "^ " | sed -s 's/:.*$//' | sort | uniq
}

function connection() {

   unalias_all

   devices=($(find /sys/class/net/ ! -type d | awk 'BEGIN { FS="/" } {print $5}' 2>&1 | grep -v lo | paste -s))

   for i in `seq 0 $((${#devices[@]}-1))`
   do
      printf " \033[0;34m${devices[$i]}\e[0m: $(ip addr show dev ${devices[$i]} | grep '\<inet\>' | sed -s 's/\ *//' | cut -d" " -f 2) "
   done
   echo -e "\n"
}
